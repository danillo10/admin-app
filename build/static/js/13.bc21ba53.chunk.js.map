{"version":3,"sources":["components/Button/styled.jsx","utils/index.js","services/api/api.js","components/Form/styled.jsx","components/TitleBar/styled.jsx","components/TitleBar/index.jsx","components/Content/styled.jsx","components/Content/index.jsx","components/Card/styled.jsx","components/Card/index.jsx","components/CardTitle/styled.jsx","components/CardTitle/index.jsx","components/Form/LabelInput.jsx","components/Button/BtnBlue.jsx","components/Messages/styled.jsx","components/Messages/index.jsx","components/Spinner/styled.jsx","components/Spinner/index.jsx","services/api/admin.js","pages/Profile/validation.js","pages/Profile/validationPassword.js","components/Form/Upload.jsx","pages/Profile/index.jsx"],"names":["Standart","styled","button","Button","BtnBlue","BtnRed","BtnWhite","StandartLink","Link","LinkButton","SmallLink","LinkBlue","SmLinkGreen","BtnBox","div","setErrors","error","response","data","errors","message","cnpjMask","value","replace","cnpjUnmask","api","axios","create","baseURL","config","envApi","interceptors","request","use","token","getToken","headers","Authorization","Label","InputGroup","InputLabel","dragActive","css","dragReject","DropContainer","attrs","className","props","idDragActive","isDragReject","messageColors","default","success","UploadMessage","p","type","DropBox","TitleBar","Breadcrumb","ul","Component","label","breadcrumb","map","item","index","to","path","currentPage","Content","children","Card","CardTitle","title","name","flexGrow","readOnly","variant","formik","htmlFor","touched","id","values","onChange","handleChange","Message","formMessages","alert","Spinner","handleAdminLogin","email","password","post","handleAdminForgotPassword","uuid","v4","emailTo","emailFrom","process","smtpHost","smtpPort","smtpUser","smtpPass","emailMessage","handleAdminRecoverPassword","put","handleAdmin","get","handleAdminShow","handleStoreAdmin","pass","split","handleUpdateAdmin","handleAdminUpdateFile","FormData","append","handleAdminUpdatePassword","handleUpdateProfile","profileId","handleAdminDelete","history","delete","push","Validation","yup","string","required","min","password_confirmation","oneOf","ref","renderDragMessage","isDragActive","maxSize","accept","onDropAccepted","onUpload","getRootProps","getInputProps","fileRejections","idx","code","done","fileUrl","src","alt","Page","useState","messages","setMessages","messagesPassword","setMessagesPassword","messagesFile","setMessagesFile","setData","useHistory","setDone","uploadErrors","setUploadErrors","useEffect","getUser","then","res","useFormik","initialValues","validationSchema","Yup","onSubmit","logout","catch","enableReinitialize","formikPassword","current_password","ValidationPassword","files","handleSubmit","Messages","disabled","isSubmitting","Upload","file_url"],"mappings":"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","file":"static/js/13.bc21ba53.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const Standart = styled.button`\n  color: var(--color-white);\n  border-radius: 5px;\n  border: none;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  transition: all 0.3s;\n  &:hover {\n    opacity: 0.5;\n    cursor: pointer;\n  }\n  &:focus {\n    outline: 0;\n  }\n`\n\nexport const Button = styled(Standart)`\n  padding: 8px 12px;\n`\n\nexport const BtnBlue = styled(Button)`\n  background-color: var(--color-blue);\n`\nexport const BtnRed = styled(Button)`\n  background-color: var(--color-red);\n`\nexport const BtnWhite = styled(Button)`\n  background-color: var(--color-white);\n  color: var(--color-font);\n`\n\nexport const StandartLink = styled(Link)`\n  color: var(--color-white);\n  border-radius: 5px;\n  border: none;\n  display: flex;\n  font-size: 16px;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.3s;\n  &:hover {\n    opacity: 0.5;\n    cursor: pointer;\n  }\n  &:focus {\n    outline: 0;\n  }\n`\nexport const LinkButton = styled(StandartLink)`\n  padding: 8px 12px;\n  text-decoration: none;\n`\nexport const SmallLink = styled(StandartLink)`\n  padding: 4px 8px;\n`\nexport const LinkBlue = styled(LinkButton)`\n  background-color: var(--color-blue);\n`\nexport const SmLinkGreen = styled(SmallLink)`\n  background-color: var(--color-green);\n`\n\nexport const BtnBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-top: 30px;\n`\n","export const setErrors = (error) => error.response.data.errors.message\n\nexport const cepMask = (value) =>\n  value\n    .replace(/\\D+/g, '')\n    .replace(/(\\d{5})(\\d)/, '$1-$2')\n    .replace(/(-\\d{3})\\d+?$/, '$1')\n\nexport const phoneMask = (value) =>\n  value\n    .replace(/\\D+/g, '')\n    .replace(/(\\d{2})(\\d)/, '($1) $2')\n    .replace(/(\\d{4})(\\d)/, '$1-$2')\n    .replace(/(\\d{4})-(\\d)(\\d{4})/, '$1$2-$3')\n    .replace(/(-\\d{4})\\d+?$/, '$1')\n\nexport const cnpjMask = (value) =>\n  value\n    .replace(/\\D/g, '')\n    .replace(/(\\d{2})(\\d)/, '$1.$2')\n    .replace(/(\\d{3})(\\d)/, '$1.$2')\n    .replace(/(\\d{3})(\\d)/, '$1/$2')\n    .replace(/(\\d{4})(\\d)/, '$1-$2')\n    .replace(/(-\\d{2})\\d+?$/, '$1')\n\nexport const cnpjUnmask = (value) =>\n  value.replace(/\\D+/g, '').replace(/([0-9])/, '$1')\n\nexport const cpfMask = (value) =>\n  value\n    .replace(/\\D/g, '')\n    .replace(/(\\d{3})(\\d)/, '$1.$2')\n    .replace(/(\\d{3})(\\d)/, '$1.$2')\n    .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n    .replace(/(-\\d{2})\\d+?$/, '$1')\n\nexport const numberMask = (value) =>\n  value\n    .replace(/\\D/g, '')\n    .replace(/(\\d{3})(\\d)/, '$1.$2')\n    .replace(/(\\d{3})(\\d)/, '$1.$2')\n    .replace(/(\\d{3})(\\d)/, '$1.$2')\n    .replace(/(\\d{3})(\\d)/, '$1.$2')\n\nexport const toMoney = (value) =>\n  Number(value).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })\n","import axios from 'axios'\nimport config from 'config'\nimport { getToken } from 'services/auth'\n\nconst api = axios.create({ baseURL: config.envApi })\n\napi.interceptors.request.use(async (config) => {\n  const token = getToken()\n  if (token) config.headers.Authorization = `${token}`\n  return config\n})\n\nexport default api\n","import styled, { css } from 'styled-components'\n\nexport const Label = styled.div`\n  display: flex;\n  align-items: center;\n  color: var(--color-font);\n  & div {\n    color: var(--color-red);\n    height: 8px;\n    margin: 0 0 4px 16px;\n    font-size: 12px;\n  }\n`\n\nconst InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  & .variant {\n    border: 1px solid var(--color-font);\n    outline: 0;\n    color: var(--color-input);\n  }\n`\n\nexport const InputLabel = styled(InputGroup)`\n  & input {\n    border: 1px solid var(--color-sidebar-hover);\n    color: var(--color-font);\n    font-size: 16px;\n    padding: 10px;\n    margin-top: 8px;\n    border-radius: 5px;\n    background-color: var(--color-background);\n  }\n  & input:focus {\n    outline: 0;\n  }\n`\n\nconst dragActive = css`\n  border-color: green;\n`\nconst dragReject = css`\n  border-color: red;\n`\nexport const DropContainer = styled.div.attrs({\n  className: 'dropzone'\n})`\n  border-radius: 10px;\n  cursor: pointer;\n  transition: height 0.2s ease;\n  background-color: var(--color-background);\n  height: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${(props) => props.idDragActive && dragActive}\n  ${(props) => props.isDragReject && dragReject}\n`\nconst messageColors = {\n  default: 'var(--color-font)',\n  error: 'var(--color-red)',\n  success: 'var(--color-green)'\n}\nexport const UploadMessage = styled.p`\n  display: flex;\n  color: ${(props) => messageColors[props.type || 'default']};\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  margin: 0 !important;\n`\nexport const DropBox = styled.div`\n  background-color: var(--color-sidebar-hover);\n  max-width: 450px;\n  width: 100%;\n  border-radius: 20px;\n  padding: 20px;\n  & img {\n    width: 100%;\n    margin-top: 20px;\n    border-radius: 10px;\n  }\n`\n","import styled from 'styled-components'\n\nexport const TitleBar = styled.div`\n  background-color: var(--color-sidebar);\n  color: var(--color-blue);\n  height: 80px;\n  padding: 15px 30px;\n  & h1 {\n    font-size: 24px;\n    line-height: 28px;\n  }\n`\nexport const Breadcrumb = styled.ul`\n  padding: 8px 0;\n  list-style: none;\n  margin: 0 auto;\n  & li {\n    display: inline;\n    font-size: 16px;\n  }\n  & li + li:before {\n    color: var(--color-font);\n  }\n  & li a {\n    color: var(--color-blue);\n    text-decoration: none;\n    padding: 8px;\n    border-radius: 5px;\n  }\n  & li {\n    color: var(--color-font);\n  }\n  & li a:hover {\n    background-color: var(--color-sidebar-hover);\n    text-decoration: none;\n  }\n`\n","import { Link } from 'react-router-dom'\nimport { Breadcrumb, TitleBar } from './styled'\n\nconst Component = (props) => {\n  return (\n    <TitleBar>\n      <h1>{props.label}</h1>\n      <Breadcrumb>\n        {props.breadcrumb &&\n          props.breadcrumb.map((item, index) => (\n            <li key={index}>\n              <Link to={item.path}>{item.label}</Link>/\n            </li>\n          ))}\n        <li>{props.currentPage}</li>\n      </Breadcrumb>\n    </TitleBar>\n  )\n}\n\nexport default Component\n","import styled from 'styled-components'\n\nexport const Content = styled.div`\n  width: 100%;\n  padding: 15px;\n`\n","import { Content } from './styled'\n\nconst Component = (props) => {\n  return <Content>{props.children}</Content>\n}\n\nexport default Component\n","import styled from 'styled-components'\n\nexport const Card = styled.div`\n  background-color: var(--color-background-card);\n  margin: 15px 15px 30px 15px;\n  border-radius: 5px;\n  color: var(--color-font);\n`\n","import { Card } from './styled'\n\nconst Component = (props) => <Card>{props.children}</Card>\n\nexport default Component\n","import styled from 'styled-components'\n\nexport const CardTitle = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid var(--color-sidebar-hover);\n  color: var(--color-font);\n  & p {\n    padding: 15px;\n    flex-grow: 1;\n    font-size: 20px;\n    line-height: 24px;\n    font-weight: 400;\n  }\n  & div {\n    padding: 15px;\n  }\n  @media (max-width: 1140px) {\n    & {\n      flex-direction: column;\n    }\n  }\n`\n","import { CardTitle } from './styled'\n\nconst Component = (props) => {\n  return (\n    <CardTitle>\n      <p>{props.title}</p>\n      <div>{props.children}</div>\n    </CardTitle>\n  )\n}\n\nexport default Component\n","import { Label, InputLabel } from './styled'\n\nconst Component = ({\n  type,\n  name,\n  label,\n  flexGrow,\n  readOnly,\n  variant,\n  formik\n}) => {\n  return (\n    <>\n      <InputLabel className={flexGrow ? flexGrow : null}>\n        <Label>\n          <label htmlFor={name}>{label}</label>\n          <div>\n            {formik.touched[name] && formik.errors[name]\n              ? formik.errors[name]\n              : null}\n          </div>\n        </Label>\n        <input\n          type={!type ? 'text' : type}\n          id={name}\n          name={name}\n          readOnly={readOnly}\n          className={variant}\n          value={formik.values[name]}\n          onChange={formik.handleChange}\n        />\n      </InputLabel>\n    </>\n  )\n}\n\nexport default Component\n","import { BtnBlue } from './styled'\n\nconst Component = (props) => {\n  return <BtnBlue type={props.type}>{props.children}</BtnBlue>\n}\n\nexport default Component\n","import styled from 'styled-components'\n\nexport const Message = styled.div`\n  &.alert-blue,\n  &.alert-red,\n  &.alert-green,\n  &.alert-orange {\n    border-radius: 8px;\n    padding: 12px 16px 12px 24px;\n    margin-bottom: 16px;\n  }\n  &.alert-red {\n    color: #721c24;\n    border: 1px solid #721c24;\n    background-color: #f8d7da;\n  }\n  &.alert-green {\n    color: #155724;\n    border: 1px solid #155724;\n    background-color: #d4edda;\n  }\n  &.alert-blue {\n    color: #004085;\n    border: 1px solid #004085;\n    background-color: #cce5ff;\n  }\n  &.alert-orange {\n    color: #856404;\n    border: 1px solid #856404;\n    background-color: #fff3cd;\n  }\n`\n","import { Message } from './styled'\n\nconst Component = ({ formMessages, alert }) => {\n  return formMessages && <Message className={alert}>{formMessages}</Message>\n}\n\nexport default Component\n","import styled from 'styled-components'\n\nexport const Spinner = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 24px;\n  height: 24px;\n  border: 5px solid #f3f3f3;\n  border-top: 5px solid var(--color-blue);\n  border-radius: 50%;\n  animation: spin 2s linear infinite;\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n","import { Spinner } from './styled'\n\nconst Component = () => <Spinner></Spinner>\n\nexport default Component\n","import api from './api'\nimport { v4 } from 'uuid'\n\nexport const handleAdminLogin = async (data) => {\n  const { email, password } = data\n  const response = await api.post(`/admin/login`, { email, password })\n  return response\n}\n\nexport const handleAdminForgotPassword = async (data) => {\n  const uuid = v4()\n  const values = {\n    emailTo: data.email,\n    emailFrom: process.env.REACT_APP_EMAIL_FROM,\n    smtpHost: process.env.REACT_APP_EMAIL_HOST,\n    smtpPort: process.env.REACT_APP_EMAIL_PORT,\n    smtpUser: process.env.REACT_APP_EMAIL_USER,\n    smtpPass: process.env.REACT_APP_EMAIL_PASS,\n    uuid: uuid,\n    emailMessage: `\n        <h2>Redefinição de senha</h2>\n        <p>Acesse o link abaixo para redefinir sua senha.</p>\n        <a href=\"${process.env.REACT_APP_URL_APP}/recuperar-senha/${uuid}\">${process.env.REACT_APP_URL_APP}/recuperar-senha/${uuid}</a>\n      `\n  }\n  return await api.post(`/users/forgot-password`, values)\n}\n\nexport const handleAdminRecoverPassword = async (token, data) => {\n  return await api.put(`/admin/recover-password/${token}`, data)\n}\n\nexport const handleAdmin = async () => (await api.get(`/admin`)).data\n\nexport const handleAdminShow = async (id) =>\n  (await api.get(`/admin/${id}`)).data\n\nexport const handleStoreAdmin = async (data) => {\n  const pass = v4().split('-')[0]\n  const values = {\n    name: data.name,\n    emailTo: data.email,\n    password: pass,\n    emailFrom: process.env.REACT_APP_EMAIL_FROM,\n    smtpHost: process.env.REACT_APP_EMAIL_HOST,\n    smtpPort: process.env.REACT_APP_EMAIL_PORT,\n    smtpUser: process.env.REACT_APP_EMAIL_USER,\n    smtpPass: process.env.REACT_APP_EMAIL_PASS,\n    emailMessage: `\n     \t<h3>Cadastro realizado com sucesso!.</h3>\n     \t<p>Olá, seja bem vindo ao <strong>Analyticdbi Embed</strong></p>\n     \t<p>Você foi cadastrado para acessar a plataforma e ter acesso aos Relatórios e Dashboard dos seus principais projetos.</p>\n     \t<p>Segue abaixo os seus dados de acesso:</p>\n       <ul>\n     \t\t\t<li>Email: ${data.email}</li>\n     \t\t\t<li>Senha: ${pass}</li>\n     \t</ul>\n     `\n  }\n  return await api.post(`/admin/store`, values)\n}\n\nexport const handleUpdateAdmin = async (id, data) => {\n  const { name, email } = data\n  return await api.put(`/admin/${id}/update`, { name, email })\n}\n\nexport const handleAdminUpdateFile = async (data, id) => {\n  const values = new FormData()\n  values.append('file', data)\n  try {\n    await api.put(`/admin/${id}/upload`, values)\n    return\n  } catch (error) {\n    return error\n  }\n}\n\nexport const handleAdminUpdatePassword = async (data) => {\n  return await api.put(`/admin/update-password`, data)\n}\n\nexport const handleUpdateProfile = async (profileId, data) => {\n  const values = {\n    name: data.name,\n    email: data.email\n  }\n  return await api.put(`/admin/${profileId}/update`, values)\n}\n\nexport const handleAdminDelete = async (id, history) => {\n  await api.delete(`/admin/${id}`)\n  return history.push('/admin')\n}\n","const Validation = (yup) => ({\n  name: yup.string().required('Campo obrigatório'),\n  email: yup\n    .string()\n    .email('Informe um email válido')\n    .required('Campo obrigatório')\n})\n\nexport default Validation\n","const Validation = (yup) => ({\n  password: yup\n    .string()\n    .min(6, 'Deve conter no minimo 6 caracteres')\n    .required('Campo obrigatório'),\n  password_confirmation: yup\n    .string()\n    .required('Campo obrigatório')\n    .oneOf(\n      [yup.ref('password'), null],\n      'Confirmação de senha precisa ser igual a senha'\n    )\n})\n\nexport default Validation\n","import React from 'react'\nimport Dropzone from 'react-dropzone'\nimport { InputLabel, Label } from './styled'\n\nimport { DropContainer, UploadMessage, DropBox } from './styled'\n\nconst Component = (props) => {\n  const renderDragMessage = (isDragActive, isDragReject) => {\n    if (!isDragActive) {\n      return <UploadMessage>Escolha um arquivo ou arraste aqui!</UploadMessage>\n    }\n    if (isDragReject) {\n      return <UploadMessage type=\"error\">Arquivo não suportado!</UploadMessage>\n    }\n    return <UploadMessage type=\"success\">Solte os arquivos aqui!</UploadMessage>\n  }\n\n  const maxSize = 2 * 1024 * 1024\n  const error = {\n    'file-too-large': `O Tamanho do arquivo deve ser menor que ${maxSize} bytes`,\n    'file-invalid-type': `O arquivo deve ser uma imagem`\n  }\n\n  return (\n    <InputLabel className={props.flexGrow ? props.flexGrow : null}>\n      <Label>\n        <label htmlFor={props.name}>{props.label}</label>\n      </Label>\n      <DropBox>\n        <Dropzone\n          accept=\"image/*\"\n          maxSize={maxSize}\n          onDropAccepted={props.onUpload}\n        >\n          {({\n            getRootProps,\n            getInputProps,\n            isDragActive,\n            isDragReject,\n            fileRejections\n          }) => {\n            fileRejections.map((item) => props.setErrors(item.errors))\n            return (\n              <DropContainer\n                {...getRootProps()}\n                isDragActive={isDragActive}\n                isDragReject={isDragReject}\n              >\n                <input {...getInputProps()} />\n                {renderDragMessage(isDragActive, isDragReject)}\n              </DropContainer>\n            )\n          }}\n        </Dropzone>\n\n        {props.errors.map((item, idx) => (\n          <UploadMessage type=\"error\" key={idx}>\n            {error[item.code]}\n          </UploadMessage>\n        ))}\n\n        {props.done ? (\n          <p>Aguarde...</p>\n        ) : (\n          props.fileUrl && (\n            <div>\n              <img src={props.fileUrl} alt=\"analyticdbi\" />\n            </div>\n          )\n        )}\n      </DropBox>\n    </InputLabel>\n  )\n}\n\nexport default Component\n","import { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\nimport Validation from './validation'\nimport ValidationPassword from './validationPassword'\nimport { setErrors } from 'utils'\nimport {\n  handleAdminShow,\n  handleAdminUpdateFile,\n  handleUpdateProfile,\n  handleAdminUpdatePassword\n} from 'services/api/admin'\nimport { getUser, logout } from 'services/auth'\nimport TitleBar from 'components/TitleBar'\nimport Content from 'components/Content'\nimport Card from 'components/Card'\nimport CardTitle from 'components/CardTitle'\nimport Upload from 'components/Form/Upload'\nimport Input from 'components/Form/LabelInput'\nimport BtnBlue from 'components/Button/BtnBlue'\nimport Messages from 'components/Messages'\nimport Spinner from 'components/Spinner'\n\nconst Page = () => {\n  const [messages, setMessages] = useState({ messages: [], alert: '' })\n  const [messagesPassword, setMessagesPassword] = useState({\n    messages: [],\n    alert: ''\n  })\n  const [messagesFile, setMessagesFile] = useState('')\n\n  const [data, setData] = useState({})\n  const history = useHistory()\n\n  const [done, setDone] = useState(true)\n  const [uploadErrors, setUploadErrors] = useState([])\n\n  useEffect(() => {\n    setDone(true)\n    handleAdminShow(getUser().data.id).then((res) => setData(res))\n    setDone(false)\n  }, [])\n\n  const formik = useFormik({\n    initialValues: { name: data.name, email: data.email },\n    validationSchema: Yup.object(Validation(Yup)),\n    onSubmit: () =>\n      handleUpdateProfile(data.id, formik.values)\n        .then(() => logout(history))\n        .catch((error) =>\n          setMessages({ messages: setErrors(error), alert: 'alert-orange' })\n        ),\n    enableReinitialize: true\n  })\n\n  const formikPassword = useFormik({\n    initialValues: {\n      current_password: '',\n      password: '',\n      password_confirmation: ''\n    },\n    validationSchema: Yup.object(ValidationPassword(Yup)),\n    onSubmit: () =>\n      handleAdminUpdatePassword(formikPassword.values)\n        .then(() => history.push(`/empresas`))\n        .catch((error) =>\n          setMessagesPassword({\n            messages: setErrors(error),\n            alert: 'alert-orange'\n          })\n        )\n  })\n\n  const files = async (files) => {\n    setMessagesFile('')\n    setErrors([])\n    setDone(true)\n    await handleAdminUpdateFile(files[0], data.id)\n    handleAdminShow(getUser().data.id).then((res) => setData(res))\n    setDone(false)\n  }\n\n  return (\n    <>\n      <TitleBar label=\"Meu Perfil\" currentPage=\"Index\" />\n      <Content>\n        <Card>\n          <CardTitle title=\"Dados\"></CardTitle>\n          <Content>\n            <form onSubmit={formik.handleSubmit}>\n              <Messages\n                formMessages={messages.messages}\n                alert={messages.alert}\n              />\n              <Input name=\"name\" label=\"Nome\" formik={formik} />\n              <Input type=\"email\" name=\"email\" label=\"Email\" formik={formik} />\n              <BtnBlue type=\"submit\" disabled={formik.isSubmitting}>\n                {formik.isSubmitting ? <Spinner /> : 'Enviar'}\n              </BtnBlue>\n            </form>\n          </Content>\n        </Card>\n\n        <Card>\n          <CardTitle title=\"Imagem\"></CardTitle>\n          <Content>\n            <Upload\n              onUpload={files}\n              fileUrl={data.file_url}\n              done={done}\n              errors={uploadErrors}\n              setErrors={setUploadErrors}\n            />\n            <p>{messagesFile}</p>\n          </Content>\n        </Card>\n\n        <Card>\n          <CardTitle title=\"Mudar Senha\"></CardTitle>\n          <Content>\n            <form onSubmit={formikPassword.handleSubmit}>\n              <Messages\n                formMessages={messagesPassword.messages}\n                alert={messagesPassword.alert}\n              />\n              <Input\n                type=\"password\"\n                name=\"current_password\"\n                label=\"Senha atual\"\n                formik={formikPassword}\n              />\n              <Input\n                type=\"password\"\n                name=\"password\"\n                label=\"Senha nova\"\n                formik={formikPassword}\n              />\n              <Input\n                type=\"password\"\n                name=\"password_confirmation\"\n                label=\"Confirmar senha\"\n                formik={formikPassword}\n              />\n              <BtnBlue type=\"submit\" disabled={formik.isSubmitting}>\n                {formikPassword.isSubmitting ? <Spinner /> : 'Enviar'}\n              </BtnBlue>\n            </form>\n          </Content>\n        </Card>\n      </Content>\n    </>\n  )\n}\n\nexport default Page\n"],"sourceRoot":""}